// <auto-generated />
using CA_VehicleDB_CodeFirst.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CA_VehicleDB_CodeFirst.Migrations
{
    [DbContext(typeof(VehicleContext))]
    [Migration("20230804115659_VehicleStarted")]
    partial class VehicleStarted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Automobile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.Property<string>("Fuel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxKmh")
                        .HasColumnType("int");

                    b.Property<string>("TransmissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("EngineId");

                    b.ToTable("Automobiles");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Engine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EngineType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxHP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Engines");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.Property<string>("Fuel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxKmh")
                        .HasColumnType("int");

                    b.Property<string>("TransmissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("EngineId");

                    b.ToTable("Motorcycles");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Tire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InnerSize")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tires");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EngineId")
                        .HasColumnType("int");

                    b.Property<string>("Fuel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxKmh")
                        .HasColumnType("int");

                    b.Property<string>("TransmissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("EngineId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.TruckAndTire", b =>
                {
                    b.Property<int>("TireId")
                        .HasColumnType("int");

                    b.Property<int>("TruckId")
                        .HasColumnType("int");

                    b.HasKey("TireId", "TruckId");

                    b.HasIndex("TruckId");

                    b.ToTable("TruckAndTires");
                });

            modelBuilder.Entity("TireTruck", b =>
                {
                    b.Property<int>("TiresId")
                        .HasColumnType("int");

                    b.Property<int>("TrucksId")
                        .HasColumnType("int");

                    b.HasKey("TiresId", "TrucksId");

                    b.HasIndex("TrucksId");

                    b.ToTable("TireTruck");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Automobile", b =>
                {
                    b.HasOne("CA_VehicleDB_CodeFirst.Entity.Engine", "Engine")
                        .WithMany("Automobiles")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engine");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Motorcycle", b =>
                {
                    b.HasOne("CA_VehicleDB_CodeFirst.Entity.Engine", "Engine")
                        .WithMany("Motorcycles")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engine");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Truck", b =>
                {
                    b.HasOne("CA_VehicleDB_CodeFirst.Entity.Engine", "Engine")
                        .WithMany("Trucks")
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Engine");
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.TruckAndTire", b =>
                {
                    b.HasOne("CA_VehicleDB_CodeFirst.Entity.Tire", "Tire")
                        .WithMany()
                        .HasForeignKey("TireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CA_VehicleDB_CodeFirst.Entity.Truck", "Truck")
                        .WithMany()
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tire");

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("TireTruck", b =>
                {
                    b.HasOne("CA_VehicleDB_CodeFirst.Entity.Tire", null)
                        .WithMany()
                        .HasForeignKey("TiresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CA_VehicleDB_CodeFirst.Entity.Truck", null)
                        .WithMany()
                        .HasForeignKey("TrucksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CA_VehicleDB_CodeFirst.Entity.Engine", b =>
                {
                    b.Navigation("Automobiles");

                    b.Navigation("Motorcycles");

                    b.Navigation("Trucks");
                });
#pragma warning restore 612, 618
        }
    }
}
